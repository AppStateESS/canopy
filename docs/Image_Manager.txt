How to use Image Manager
by Matthew McNaney


Introduction
------------
Image Manager is a small javascript app that assists with image form
insertion. It does away with associating image files to an element
with a file form input method.


Getting started
----------------
Image Manager is a component of the File Manager module and you will
need to include the manager class file.

PHPWS_Core::initModClass('filecabinet', 'Cabinet.php');

Now you need to get the manager object.

/**************************************************************
image_id
The id of the current image. You need to store this with your
item. This can be zero if the image has not been set. 

input_name
The name of the image. You will need to create a hidden variable with
this name as well. See below for more details.

max_width
The maximum image pixel width you want to allow. The image manager will give
the user to resize the image if it is larger.

max_height
The maximum image pixel height. See above.

mod_folder_only
If true, the image manager will only show folders made by your
module. Public image folders will be hidden.

***************************************************************/
$image_id        = 5;
$input_name      = 'my_mod_image';
$max_width       = 300;
$max_height      = 300;
$mod_folder_only = true;

$manager = Cabinet::imageManager($image_id, $input_name, $max_width,
                                 $max_height, $mod_folder_only);


Setting parameters
------------------
You can set image specifications once the manager object is
constructed.

$manager->setMaxWidth(640);
$manager->setMaxHeight(480);
$manager->setMaxSize(100000);

Form inclusion
--------------
The Image Manager must be surrounded by a form. It will create a
hidden tag named after your item name. Using the above example, a
hidden tag would like like so:

<input type="hidden" id="my_mod_image_hidden_value" name="my_mod_image" value="0" />

Call the "get" function to retrieve the selection interface and the
above hidden tag. Put the results inside your form, like so:

$form->addTplTag('IMAGE_MANAGER', $manager->get());

Form submission
---------------
After the user posts your item's form, you just need to catch and save
the image id from the hidden variable.

$my_item->image_id = $_POST['my_mod_image'];


Displaying the image
--------------------
To display the image, you just need to construct an image object and
call the getTag function:

PHPWS_Core::initModClass('filecabinet', 'Image.php');
$image = new PHPWS_Image($my_item->image_id);
echo $image->getTag();
